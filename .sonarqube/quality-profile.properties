# AFO Chat Application - SonarQube Quality Profile
# ===============================================

# This file defines custom quality rules and standards for the AFO Chat project
# Import this configuration into your SonarQube instance for consistent analysis

# Quality Gate Conditions
# =======================

# Coverage Requirements
coverage.overall.minimum=80.0
coverage.new.minimum=85.0
coverage.changed.minimum=80.0

# Duplication Requirements  
duplication.overall.maximum=3.0
duplication.new.maximum=3.0

# Maintainability Requirements
maintainability.rating.maximum=A
maintainability.debt.maximum=5.0
new.maintainability.rating.maximum=A

# Reliability Requirements
reliability.rating.maximum=A
new.reliability.rating.maximum=A

# Security Requirements
security.rating.maximum=A
security.hotspots.reviewed.minimum=100.0
new.security.rating.maximum=A

# Size Limits
lines.maximum=100000
functions.maximum=1000
classes.maximum=500

# Complexity Limits
complexity.function.maximum=10
complexity.file.maximum=200
complexity.class.maximum=50

# Custom Rules for Flutter/Dart
# =============================

# Dart-specific rules
dart.unused_import=error
dart.prefer_const_constructors=warning
dart.avoid_print=warning
dart.prefer_single_quotes=info
dart.prefer_final_fields=warning
dart.avoid_unnecessary_containers=warning

# Flutter-specific rules
flutter.prefer_const_widgets=warning
flutter.avoid_web_libraries_in_flutter=error
flutter.prefer_relative_imports=info

# Custom Rules for Node.js/TypeScript Backend
# ==========================================

# TypeScript rules
typescript.no_any=warning
typescript.explicit_function_return_type=warning
typescript.no_unused_vars=error
typescript.prefer_const_assertions=info

# Node.js security rules
nodejs.security_detect_hardcoded_passwords=error
nodejs.security_detect_sql_injection=error
nodejs.security_detect_command_injection=error
nodejs.security_detect_path_traversal=error

# Express.js specific rules
express.security_headers=warning
express.rate_limiting=info
express.input_validation=warning

# MongoDB rules
mongodb.injection_prevention=error
mongodb.connection_security=warning

# General Code Quality Rules
# ==========================

# Naming conventions
naming.class.pattern=[A-Z][a-zA-Z0-9]*
naming.method.pattern=[a-z][a-zA-Z0-9]*
naming.variable.pattern=[a-z][a-zA-Z0-9]*
naming.constant.pattern=[A-Z][A-Z_0-9]*

# Documentation requirements
documentation.class.minimum=80
documentation.method.minimum=70
documentation.public_api.minimum=90

# Code organization
organization.file_length.maximum=500
organization.method_length.maximum=50
organization.parameter_count.maximum=7

# Performance rules
performance.avoid_n_plus_one_queries=error
performance.efficient_collections=warning
performance.memory_leaks=error

# Architecture rules
architecture.layered_structure=warning
architecture.dependency_cycles=error
architecture.package_dependencies=info

# Testing rules
testing.assertion_count.minimum=1
testing.test_naming=warning
testing.mock_usage=info

# Security best practices
security.input_sanitization=error
security.output_encoding=error
security.authentication_required=warning
security.authorization_checks=warning
security.sensitive_data_logging=error

# Environment-specific rules
environment.config_externalization=warning
environment.secret_management=error
environment.environment_separation=info

# Git and Version Control
version_control.commit_message_format=info
version_control.branch_naming=info
version_control.merge_conflicts=warning